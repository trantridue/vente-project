package com.nordnet.vente.ws.entities;

import org.slf4j.LoggerFactory;
import com.nordnet.common.valueObject.identifier.Identifier;

/**
 * Reference.
 *
 * this class is auto generated by the com.nordnet.common project : entities-maven-plugin,
 * do not edit this class directly, all change will be lost on next build ...
 *
 * @author MMORTIER, JLDANSOU
 *
 */
public class Reference implements Comparable<Reference> {

	/** {@link Identifier} id. */
	protected final Identifier id;

	/**
	 * default deprecated Constructor.
	 *
	 * @deprecated
	 */
	@Deprecated
	protected Reference() {
		id = null;
	}

	/**
	 * Constructor.
	 *
	 * @param builder the {@link Builder} to use.
	 */
	protected Reference(final Builder builder) {
		id = builder.id;
	
		// check parameters
		com.nordnet.common.valueObject.utils.Null.checkNotNullOrEmpty("id", id);
	}

	/**
	 * builder of {@link Reference}.
	 *
	 * @return new {@link Builder} for {@link Reference}
	 */
	public static Builder builder() {
		return new Builder();
	}
	/**
	 * Builder for {@link Reference}.
	 *
	 * @author MMORTIER, JLDANSOU
	 *
	 */
	public static class Builder {
		
		/** {@link Identifier} id. */
		protected Identifier id;

		/** default protected Constructor. */
		protected Builder() {
			super();
		}

		/**
		 * Setter of id.
		 *
		 * @param id
		 *			{@link Identifier} the id to set.
		 * @return this {@link Builder}
		 */
		public Builder id(final Identifier id) {
			this.id = id;
			return this;
		}

		/**
		 * build new {@link Reference}.
		 *
		 * @return new {@link Reference} from this {@link Builder}
		 */
		public Reference build() {
			return new Reference(this);
		}

	}
	/**
	 * Getter of id.
	 *
	 * @return {@link Identifier} the id
	 */
	public Identifier getId() {
		return id;
	}

	@Override
	public boolean equals(final Object obj) {
		if (!(obj instanceof Reference)) {
			return false;
		}
		Reference reference = (Reference) obj;
		return com.nordnet.common.valueObject.utils.Equals.TRUE
			.andEquals(getId(), reference.getId()).isEquals();
	}

	@Override
	public int hashCode() {
	return new com.nordnet.common.valueObject.utils.HashCode(null)
		.append(getId()).hashCode();
	}

	@Override
	public String toString() {
		try {
			return com.nordnet.common.valueObject.utils.JSon.toPrettyJson(this);
		} catch (com.fasterxml.jackson.core.JsonProcessingException jpe) {
			LoggerFactory.getLogger(Reference.class).error("error with toString", jpe);
			return super.toString();
		}
	}

	@Override
	public int compareTo(final Reference o) {
		return new com.nordnet.common.valueObject.utils.Compare(true, true)
		.andCompare(getId(), o.getId()).compare();
	}


}
